

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL || head -> next == NULL) return head;
        
        ListNode* oddNode = new ListNode();
        ListNode* evenNode = new ListNode();
        ListNode* oddTail = oddNode;
        ListNode* evenTail = evenNode;
        ListNode* temp = head;
        bool oddIdx = true;

        while(temp != NULL){
            if(oddIdx) {
                oddTail -> next = temp;
                oddTail = oddTail -> next;
            }
            else {
                evenTail -> next = temp;
                evenTail = evenTail -> next;
            }

            temp = temp -> next;
            oddIdx = !oddIdx;
        }

        oddTail -> next = evenNode -> next;
        evenTail -> next = NULL;
        return oddNode -> next;

    }
};

