


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxHeight(TreeNode* temp){
        if(temp == NULL)return 0;
        return 1+max(maxHeight(temp->left), maxHeight(temp->right));
    }
    void nodesSum(TreeNode* temp, int height, int &ans, int &depth){
        if(temp == NULL) return;
        depth +=1;
        if(depth==height){
            ans = ans + temp -> val;
        }

        nodesSum(temp-> left,height,ans,depth);
        nodesSum(temp->right,height,ans,depth);
        depth  -=1;


    }
    int deepestLeavesSum(TreeNode* root) {
        if(root  == NULL) return root -> val;
        int height = maxHeight(root);
        int ans = 0,depth = 0;
        nodesSum(root,height,ans,depth);
        return ans;

        
    }
};
