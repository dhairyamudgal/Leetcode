
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    int count(ListNode* head){
        int count = 0;
        ListNode* temp = head;
        while(temp != NULL){
            count++;
            temp = temp -> next;
        }
        return count;

    }
    ListNode* solve(ListNode* &head, int n){
        int i = 0;
        while(i<n/2){
            head = head -> next;
            i++;

            
        }
        return head;
    }
    ListNode* middleNode(ListNode* head) {
        int n;
       n= count(head);
       solve(head,n);
       return head;
        
    }
};


