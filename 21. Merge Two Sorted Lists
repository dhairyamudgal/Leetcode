


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* ansNode = new ListNode();
        ListNode* temp = ansNode;
        
        while(list1 != NULL && list2 != NULL){
            if(list1 -> val <= list2 -> val){
                ListNode* nextNode = new ListNode(list1 -> val);
                temp -> next = nextNode;
                temp = temp -> next;
                list1 = list1 -> next;

            }
            else{
                ListNode* nextNode = new ListNode(list2 -> val);
                temp -> next = nextNode;
                temp = temp -> next;
                list2 = list2 -> next;

            }
            
            

        }

        while(list1 != NULL){
            ListNode* nextNode = new ListNode(list1 -> val);
                temp -> next = nextNode;
                temp = temp -> next;
                list1 = list1 -> next;

        }

         while(list2 != NULL){
            ListNode* nextNode = new ListNode(list2 -> val);
                temp -> next = nextNode;
                temp = temp -> next;
                list2 = list2 -> next;

        }

    return ansNode->next;
        
    }
};

