

class Solution {
public:
    int minSpeedOnTime(vector<int>& dist, double hour) {
        int n = dist.size();
        if (hour <= n - 1) return -1;

        int low = 1;
        int high = 1e7 + 1;

        while (low < high) {
            int mid = low + (high - low) / 2;
            double time = 0;

            for (int i = 0; i < n - 1; i++) {
                time += ceil(static_cast<double>(dist[i]) / mid);
            }

            time += static_cast<double>(dist[n - 1]) / mid;

            if (time <= hour) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }

        return (low <= 1e7 ? low : -1);
    }
};
